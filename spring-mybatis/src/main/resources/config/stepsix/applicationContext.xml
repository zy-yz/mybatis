<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--有的时候，应用需要访问多个数据库，假设现在有两个mysql库db_user、db_acount。这个时候我们就需要配置2个数据源，来连接不同的库，如下： -->
    <bean id="ds_user" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="url" value="jdbc:mysql://121.196.205.196:3306/mydb"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
    </bean>

    <bean id="ds_account" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="url" value="jdbc:mysql://121.196.205.196:3306/my_account"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
    </bean>

    <!--针对上述的两个数据源ds_user,ds_account，我们需要为每个都配置一个SqlSessionFactoryBean，如下：-->
    <!--这两个SqlSessionFactoryBean分别操作数据源ds_user、ds_account，且mapperLocations属性值指向的是不同的目录：-->
    <bean id="ssf_user" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds_user"/>
        <property name="configLocation" value="classpath:config/stepsix/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:config/stepsix/mappers/db_user/**/*.xml"/>
    </bean>

<!--再次提醒，在使用多数据源时，将操作不同库的xml映射文件、以及对应的映射器接口放到不同的目录下很重要，如果不这样，在使用时你几乎100%会遇到问题，一般都是报出数据库表找不到的错误。-->
    <bean id="ssf_account" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds_account"/>
        <property name="configLocation" value="classpath:config/stepsix/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:config/stepsix/mappers/db_account/**/*.xml"/>
    </bean>

    <bean id="sqlSessionTemplate_user" class="org.mybatis.spring.SqlSessionTemplate">
        <!--sqlSessionFactory在xml中虽然是SqlSessionFactoryBean,但spring给我们装配的是SqlSessionFactory-->
        <constructor-arg index="0" ref="ssf_user"/>
    </bean>

    <bean id="sqlSessionTemplate_account" class="org.mybatis.spring.SqlSessionTemplate">
        <!--sqlSessionFactory在xml中虽然是SqlSessionFactoryBean,但spring给我们装配的是SqlSessionFactory-->
        <constructor-arg index="0" ref="ssf_account"/>
    </bean>

    <bean id="userDao" class="com.mybatis.core.stepsix.UserDao">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate_user"/>
    </bean>

    <bean id="accountDao" class="com.mybatis.core.stepsix.AccountDao">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate_account"/>
    </bean>

    <!--最后，由于你现在有2个数据源，因此你应该配置两个事务管理器，如：-->
    <!--    如果你是使用@Transactional注解来进行声明式事务管理，应该要指定你使用的是哪一个事务管理器，如：@Transactional("accountTxManager") -->
</beans>