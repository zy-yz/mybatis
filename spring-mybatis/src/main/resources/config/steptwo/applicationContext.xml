<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- SqlSessionFactoryBean -->
    <!--通过configuration属性指定mybatis核心配置文件mybatis-config.xml路径-->
    <!--不用再通过stepone中的SqlSessionFactoryBuilder来构建SqlSession了-->
    <!--SqlSessionFactoryBuilder也是读取mybatis-config.xml-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源配置-->
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:config/steptwo/mybatis-config.xml"/>
    </bean>

    <!--数据源使用阿里巴巴的druid-->
    <!--com.alibaba.druid.pool.DruidDataSource,它实现了标准的javax.sql.DataSource接口-->
    <!--此接口是用于获取数据库连接java.sql.Connection的-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="url" value="jdbc:mysql://121.196.205.196:3306/mydb"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <!--sqlSessionFactory在xml中虽然是SqlSessionFactoryBean,但spring给我们装配的是SqlSessionFactory-->
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="userDao" class="com.mybatis.core.steptwo.UserDao">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
    </bean>

    <!--你需要配置事务管理是基于注解驱动的，如下：-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--之后，在业务bean的方法上添加@Transactional注解，此时这个方法就自动具备了事务的功能，如果出现异常，会自动回滚，没有出现异常则自动交。-->

    <!--spring 事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--默认事务超时时间-->
        <property name="defaultTimeout" value="30000"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--提交失败的话，也进行回滚-->
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>
</beans>